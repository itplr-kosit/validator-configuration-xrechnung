<?xml version="1.0" encoding="UTF-8"?>
<a:assertions xmlns:a="http://www.xoev.de/de/validator/framework/1/assertions">
  <a:namespace prefix="rep">http://www.xoev.de/de/validator/varl/1</a:namespace>
  <a:namespace prefix="s"
    >http://www.xoev.de/de/validator/framework/1/scenarios</a:namespace>
  <a:namespace prefix="html">http://www.w3.org/1999/xhtml</a:namespace>
  <a:assertion report-doc="ubl001-report.xml"
    test="rep:report/@valid = 'true'"
    >Report has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')"
    >Timestamp is today</a:assertion>
  <!-- 
             <a:assertion report-doc="ubl001-report.xml"
                          test="rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'gxpfb2Lf2DdSXE5JVBdC3POU24qYKh9/xM7+uZhY4sY='"
                          >Document hash matches</a:assertion>
                           -->
  <a:assertion report-doc="ubl001-report.xml"
    test="contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001')"
    >Document reference matches</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="rep:report/rep:scenarioMatched"
    >Scenario
                          found</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 XRechnung (UBL Invoice)'"
    >UBL Invoice scenario found</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 XRechnung (UBL CreditNote)')"
    >UBL CreditNote scenario found</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 XRechnung (CII)')"
    >CII Invoice scenario found</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:documentData/*"
    >Document data found</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']"
    >Schema validation performed</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true'"
    >Schema validatation has status valid</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])"
    >Schema validatation has error message</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])"
    >Schema validatation has warning message</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])"
    >Schema validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])"
    >Schema validatation has message with line
                          number</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])"
    >Schema validatation has message with column
                          number</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']"
    >First schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true'"
    >First schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error'])"
    >First schematron validatation has error
                          message</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])"
    >First schematron validatation has warning
                          message</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])"
    >First schematron validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation])"
    >Schema validatation has message with xpath
                          location</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']"
    >Second schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true'"
    >Second schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml'])"
    >WFR validation step exists for no scenario found </a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)"
    >WFR validation step for no scenario found has message
                          (XML case)</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="rep:report/rep:assessment/rep:accept"
    >Assessment
                          recommends acceptance</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']"
    >HTML explanation for acceptance exists</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')]"
    >HTML explanation for acceptance recommends
                          acceptance</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report'])"
    >HTML explanation for rejection exists</a:assertion>
  <a:assertion report-doc="ubl001-report.xml"
    test="not(rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')])"
    >HTML explanation for rejection recommends
                          rejection</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="not(rep:report/@valid = 'true')"
    >Report has
                          status valid</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="rep:report/rep:scenarioMatched"
    >Scenario
                          found</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 XRechnung (UBL Invoice)'"
    >Has to be UBL Invoice scenario</a:assertion>
  
  <a:assertion report-doc="ubl002-report.xml"
    test="rep:report/rep:scenarioMatched/rep:documentData/*"
    >Document data found</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true'"
    >Schema validatation has status valid</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])"
    >Schema validatation has error message</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])"
    >Schema validatation has warning message</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])"
    >Schema validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])"
    >Schema validatation has message with line
                          number</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])"
    >Schema validatation has message with column
                          number</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']"
    >First schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')"
    >First schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error']"
    >First schematron validatation has error
                          message</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning']"
    >First schematron validatation has warning
                          message</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])"
    >First schematron validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation]"
    >Schema validatation has message with xpath
                          location</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']"
    >Second schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true'"
    >Second schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml'])"
    >WFR validation step exists for no scenario found </a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)"
    >WFR validation step for no scenario found has message
                          (XML case)</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="not(rep:report/rep:assessment/rep:accept)"
    >Assessment recommends acceptance</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])"
    >HTML explanation for acceptance exists</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])"
    >HTML explanation for acceptance recommends
                          acceptance</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']"
    >HTML explanation for rejection exists</a:assertion>
  <a:assertion report-doc="ubl002-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]"
    >HTML explanation for rejection recommends
                          rejection</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(rep:report/@valid = 'true')"
    >Report has
                          status valid</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')"
    >Timestamp is today</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')"
    >Document hash matches</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))"
    >Document reference matches</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="rep:report/rep:scenarioMatched"
    >Scenario
                          found</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 XRechnung (UBL Invoice)'"
    >Has to be UBL Invoice scenario</a:assertion>
  
  <a:assertion report-doc="ubl003-report.xml"
    test="rep:report/rep:scenarioMatched/rep:documentData/*"
    >Document data found</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']"
    >Schema validation performed</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true'"
    >Schema validatation has status valid</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])"
    >Schema validatation has error message</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])"
    >Schema validatation has warning message</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])"
    >Schema validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])"
    >Schema validatation has message with line
                          number</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])"
    >Schema validatation has message with column
                          number</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']"
    >First schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')"
    >First schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error']"
    >First schematron validatation has error
                          message</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])"
    >First schematron validatation has warning
                          message</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])"
    >First schematron validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation]"
    >Schema validatation has message with xpath
                          location</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']"
    >Second schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true'"
    >Second schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml'])"
    >WFR validation step exists for no scenario found </a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)"
    >WFR validation step for no scenario found has message
                          (XML case)</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="rep:report/rep:assessment/rep:accept"
    >Assessment
                          recommends acceptance</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']"
    >HTML explanation for acceptance exists</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')]"
    >HTML explanation for acceptance recommends
                          acceptance</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report'])"
    >HTML explanation for rejection exists</a:assertion>
  <a:assertion report-doc="ubl003-report.xml"
    test="not(rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')])"
    >HTML explanation for rejection recommends
                          rejection</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/@valid = 'true')"
    >Report has
                          status valid</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')"
    >Timestamp is today</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')"
    >Document hash matches</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))"
    >Document reference matches</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="rep:report/rep:scenarioMatched"
    >Scenario
                          found</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 XRechnung (UBL Invoice)'"
    >UBL Invoice scenario found</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="rep:report/rep:scenarioMatched/rep:documentData/*"
    >Document data found</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']"
    >Schema validation performed</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true'"
    >Schema validatation has status valid</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])"
    >Schema validatation has error message</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])"
    >Schema validatation has warning message</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])"
    >Schema validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])"
    >Schema validatation has message with line
                          number</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])"
    >Schema validatation has message with column
                          number</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']"
    >First schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true'"
    >First schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error'])"
    >First schematron validatation has error
                          message</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])"
    >First schematron validatation has warning
                          message</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])"
    >First schematron validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation])"
    >Schema validatation has message with xpath
                          location</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']"
    >Second schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true')"
    >Second schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml'])"
    >WFR validation step exists for no scenario found </a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)"
    >WFR validation step for no scenario found has message
                          (XML case)</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:assessment/rep:accept)"
    >Assessment recommends acceptance</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])"
    >HTML explanation for acceptance exists</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])"
    >HTML explanation for acceptance recommends
                          acceptance</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']"
    >HTML explanation for rejection exists</a:assertion>
  <a:assertion report-doc="ubl004-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]"
    >HTML explanation for rejection recommends
                          rejection</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/@valid = 'true')"
    >Report has
                          status valid</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')"
    >Timestamp is today</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')"
    >Document hash matches</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))"
    >Document reference matches</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="rep:report/rep:scenarioMatched"
    >Scenario
                          found</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 XRechnung (UBL Invoice)'"
    >Has to be UBL Invoice scenario</a:assertion>
  
  <a:assertion report-doc="ubl005-report.xml"
    test="rep:report/rep:scenarioMatched/rep:documentData/*"
    >Document data found</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']"
    >Schema validation performed</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true')"
    >Schema validatation has status valid</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error']"
    >Schema validatation has error message</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])"
    >Schema validatation has warning message</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])"
    >Schema validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber]"
    >Schema validatation has message with line
                          number</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber]"
    >Schema validatation has message with column
                          number</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1'])"
    >First schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')"
    >First schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error'])"
    >First schematron validatation has error
                          message</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])"
    >First schematron validatation has warning
                          message</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])"
    >First schematron validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation])"
    >Schema validatation has message with xpath
                          location</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2'])"
    >Second schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true')"
    >Second schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml'])"
    >WFR validation step exists for no scenario found </a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)"
    >WFR validation step for no scenario found has message
                          (XML case)</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:assessment/rep:accept)"
    >Assessment recommends acceptance</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])"
    >HTML explanation for acceptance exists</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])"
    >HTML explanation for acceptance recommends
                          acceptance</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']"
    >HTML explanation for rejection exists</a:assertion>
  <a:assertion report-doc="ubl005-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]"
    >HTML explanation for rejection recommends
                          rejection</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/@valid = 'true')"
    >Report must not have status valid</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')"
    >Timestamp is not from today</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')"
    >Document hash matches</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))"
    >Document reference matches</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="rep:report/rep:noScenarioMatched"
    >Must have a noSenarioMatched element</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 XRechnung (UBL Invoice)')"
    >Has to be UBL Invoice scenario </a:assertion>
 
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:documentData/*)"
    >Document data found</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd'])"
    >Schema validation performed</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true')"
    >Schema validatation has status valid</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])"
    >Schema validatation has error message</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])"
    >Schema validatation has warning message</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])"
    >Schema validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])"
    >Schema validatation has message with line
                          number</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])"
    >Schema validatation has message with column
                          number</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1'])"
    >First schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')"
    >First schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error'])"
    >First schematron validatation has error
                          message</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])"
    >First schematron validatation has warning
                          message</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])"
    >First schematron validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation])"
    >Schema validatation has message with xpath
                          location</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2'])"
    >Second schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true')"
    >Second schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']"
    >WFR vor val-xml validation step must exist in noScenarioReport</a:assertion>



  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)"
    >WFR validation step for no scenario found has message
                          (XML case)</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:assessment/rep:accept)"
    >Assessment should not recommend acceptance</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])"
    >HTML explanation for acceptance exists</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])"
    >HTML explanation for acceptance recommends
                          acceptance</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']"
    >HTML explanation for rejection exists</a:assertion>
  <a:assertion report-doc="ubl006-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]"
    >HTML explanation for rejection recommends
                          rejection</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/@valid = 'true')"
    >Report has
                          status valid</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')"
    >Timestamp is today</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')"
    >Document hash matches</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))"
    >Document reference matches</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched)"
    >Scenario
                          found</a:assertion>
  
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:documentData/*)"
    >Document data found</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd'])"
    >Schema validation performed</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true')"
    >Schema validatation has status valid</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])"
    >Schema validatation has error message</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])"
    >Schema validatation has warning message</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])"
    >Schema validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])"
    >Schema validatation has message with line
                          number</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])"
    >Schema validatation has message with column
                          number</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1'])"
    >First schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')"
    >First schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error'])"
    >First schematron validatation has error
                          message</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])"
    >First schematron validatation has warning
                          message</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])"
    >First schematron validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation])"
    >Schema validatation has message with xpath
                          location</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2'])"
    >Second schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true')"
    >Second schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']"
    >WFR validation step exists for no scenario found </a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message"
    >WFR validation step for no scenario found has message
                          (XML case)</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:assessment/rep:accept)"
    >Assessment recommends acceptance</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])"
    >HTML explanation for acceptance exists</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])"
    >HTML explanation for acceptance recommends
                          acceptance</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']"
    >HTML explanation for rejection exists</a:assertion>
  <a:assertion report-doc="ubl007-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]"
    >HTML explanation for rejection recommends
                          rejection</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/@valid = 'true')"
    >Report has
                          status valid</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')"
    >Timestamp is today</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')"
    >Document hash matches</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))"
    >Document reference matches</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="rep:report/rep:scenarioMatched"
    >Scenario
                          found</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL Invoice)')"
    >UBL Invoice scenario found</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 XRechnung (UBL CreditNote)'"
    >Has to match UBL CreditNote scenario name</a:assertion>
  
  <a:assertion report-doc="ubl008-report.xml"
    test="rep:report/rep:scenarioMatched/rep:documentData/*"
    >Document data found</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']"
    >Schema validation performed</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true'"
    >Schema validatation has status valid</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])"
    >Schema validatation has error message</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])"
    >Schema validatation has warning message</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])"
    >Schema validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])"
    >Schema validatation has message with line
                          number</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])"
    >Schema validatation has message with column
                          number</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']"
    >First schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')"
    >First schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error']"
    >First schematron validatation has error
                          message</a:assertion>
  <!-- 
             <a:assertion report-doc="ubl008-report.xml"
                          test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])"
                          >First schematron validatation has warning
                          message</a:assertion>
                           -->
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])"
    >First schematron validatation has information
                          message</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation]"
    >Schema validatation has message with xpath
                          location</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']"
    >Second schematron validation performed</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true')"
    >Second schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml'])"
    >WFR validation step exists for no scenario found </a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)"
    >WFR validation step for no scenario found has message
                          (XML case)</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:assessment/rep:accept)"
    >Assessment recommends acceptance</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])"
    >HTML explanation for acceptance exists</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])"
    >HTML explanation for acceptance recommends
                          acceptance</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']"
    >HTML explanation for rejection exists</a:assertion>
  <a:assertion report-doc="ubl008-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]"
    >HTML explanation for rejection recommends
                          rejection</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/@valid = 'true')"
    >Report has
                          status valid</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')"
    >Timestamp is today</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')"
    >Document hash matches</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))"
    >Document reference matches</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched)"
    >Report does not have to have a scenarioMatched element</a:assertion>

  <a:assertion report-doc="bin001-report.xml"
    test="/rep:report/rep:noScenarioMatched"
    >Report has to have a noScenarioMatched element</a:assertion>

  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:documentData/*)"
    >Document data found</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd'])"
    >Schema validation performed</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true')"
    >Schema validatation has status valid</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])"
    >Schema validatation has error message</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])"
    >Schema validatation has warning message</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])"
    >Schema validatation has information
                          message</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])"
    >Schema validatation has message with line
                          number</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])"
    >Schema validatation has message with column
                          number</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1'])"
    >First schematron validation performed</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')"
    >First schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error'])"
    >First schematron validatation has error
                          message</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])"
    >First schematron validatation has warning
                          message</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])"
    >First schematron validatation has information
                          message</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation])"
    >Schema validatation has message with xpath
                          location</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2'])"
    >Second schematron validation performed</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true')"
    >Second schematron validation has status
                          valid</a:assertion>

  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:assessment/rep:accept)"
    >Assessment recommends acceptance</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])"
    >HTML explanation for acceptance exists</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])"
    >HTML explanation for acceptance recommends
                          acceptance</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']"
    >HTML explanation for rejection exists</a:assertion>
  <a:assertion report-doc="bin001-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]"
    >HTML explanation for rejection recommends
                          rejection</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/@valid = 'true')"
    >Report has
                          status false</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')"
    >Timestamp is today</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')"
    >Document hash matches</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))"
    >Document reference matches</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="rep:report/rep:scenarioMatched"
    >Not Scenario found</a:assertion>
  
  <a:assertion report-doc="cii001-report.xml"
    test="rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 XRechnung (CII)'"
    >CII Invoice scenario found</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:documentData/*"
    >Document data found</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']"
    >Schema validation performed</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true'"
    >Schema validatation has status valid</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])"
    >Schema validatation has error message</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])"
    >Schema validatation has warning message</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])"
    >Schema validatation has information
                          message</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])"
    >Schema validatation has message with line
                          number</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])"
    >Schema validatation has message with column
                          number</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']"
    >First schematron validation performed</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')"
    >First schematron validation has status
                          false</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error']"
    >First schematron validatation has error
                          message</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error']"
    >First schematron validatation has error
                          message</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])"
    >First schematron validatation has information
                          message</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation]"
    >Schema validatation has message with xpath
                          location</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']"
    >Second schematron validation performed</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true')"
    >Second schematron validation has status
                          valid</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml'])"
    >WFR validation step exists for no scenario found </a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)"
    >WFR validation step for no scenario found has message
                          (XML case)</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/rep:assessment/rep:accept)"
    >Assessment recommends acceptance</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])"
    >HTML explanation for acceptance exists</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])"
    >HTML explanation for acceptance recommends
                          acceptance</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']"
    >HTML explanation for rejection exists</a:assertion>
  <a:assertion report-doc="cii001-report.xml"
    test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]"
    >HTML explanation for rejection recommends
                          rejection</a:assertion>
</a:assertions>
